import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;

/**
* Abereni Opuiyo
* CPS142 â€“ Fall 2024
* 9/7/24
* Instructor: Adam Divelbiss
* Assignment: Program01
* Purpose:  a simple command line application to find the 
* strongest and fastest hurricane for a given  name.  
* */

public class Main {
	/**
	 * A public static method that is responsible for loading the data
	 * from the "htracks_na_cps142_dcc.csv" file provided with the project.
	 * @return an ArrayList consisting of a StormRecord observation 
	 * record for each row of data in the file.
	 * @throws FileNotFoundException
	 */
	public static ArrayList<StormRecord> loadData() throws FileNotFoundException{
		
		// Create a placeholder StormRecord object and an arraylist of StormRecords then
		// open the csv file and create a StormRecord object from each string.
		
		StormRecord csvStormRecord;
		
		String csvString;
		
		ArrayList<StormRecord> csvRecords = new ArrayList<>();
		
		File csvFile = new File("src/htracks_na_cps142_dcc.csv");

		Scanner readCSV = new Scanner(csvFile);

		// Skips the first two lines of the CSV 
		
		readCSV.nextLine();
		readCSV.nextLine();		
		while(readCSV.hasNextLine()) {
			csvString = readCSV.nextLine();
			csvStormRecord = new StormRecord(csvString);
			csvRecords.add(csvStormRecord);
			
		}
				
		return csvRecords;
	}
	
	public static void main(String[] args) throws FileNotFoundException {
		
		ArrayList<StormRecord> data = loadData();
		
		Scanner userInput = new Scanner(System.in);
		
		
		boolean shouldContinue = true;
		while (shouldContinue){
			System.out.println("Welcome to the DCC Hurricane Database!\n");
			System.out.println("Enter all or part of the name of a North "
				+ "Atlantic Hurricane to search.\nThe program will find"
				+ " records for hurricanes with the highest wind speed\n"
				+ "and highest storm speed from the database for the given name.\n");
		
			System.out.printf("Total records:  %d\n\n", data.size());
			System.out.print("Hurricane Name: ");
			String userHurricane = userInput.nextLine();
		
			StormRecord maxWind = null;
			StormRecord maxSpeed = null;
			
			String searchTerm = userHurricane.toUpperCase();
			int recordCount = 0;
			
			for(StormRecord record: data) {
				if (searchTerm.length() > 0 && record.getName().contains(searchTerm)) {
					recordCount++;
					
					if(maxWind == null || record.getWind() > maxWind.getWind()) {
						maxWind = record;
					}
					
					if (maxSpeed == null || record.getSpeed() > maxSpeed.getSpeed()){
						maxSpeed = record;
					}
				}
			}
			
			System.out.println("************************************************");
			System.out.println("Hurricane report for: " + searchTerm + "\n");
			
			System.out.println("Total number of reords found: " + recordCount + "\n");
			
			System.out.println("Highest Wind:");
			System.out.println(maxWind + "\n");
			
			System.out.println("Fastest Storm:");
			System.out.println(maxSpeed);
			System.out.println("************************************************\n");

			
			System.out.printf("Would you like to try again (Y/N)?");
			
			if(userInput.nextLine().toLowerCase() == "n") {
				shouldContinue = false;
				System.out.println("\nThanks for using the DCC Hurricane Database!");
			}
			else {
				shouldContinue = true;
			}
		}
				
	}

}
